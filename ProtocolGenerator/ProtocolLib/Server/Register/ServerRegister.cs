// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ServerRegister.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Message.Server.Register {

  /// <summary>Holder for reflection information generated from ServerRegister.proto</summary>
  public static partial class ServerRegisterReflection {

    #region Descriptor
    /// <summary>File descriptor for ServerRegister.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServerRegisterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRTZXJ2ZXJSZWdpc3Rlci5wcm90bxIXTWVzc2FnZS5TZXJ2ZXIuUmVnaXN0",
            "ZXIiQAoKU2VydmVyX1RhZxISCgpzZXJ2ZXJUeXBlGAEgASgFEg8KB2dyb3Vw",
            "SWQYAiABKAUSDQoFc3ViSWQYAyABKAUiRwoTTVNHX1NlcnZlcl9SZWdpc3Rl",
            "chIwCgN0YWcYASABKAsyIy5NZXNzYWdlLlNlcnZlci5SZWdpc3Rlci5TZXJ2",
            "ZXJfVGFnIl4KGk1TR19TZXJ2ZXJfUmVnaXN0ZXJfUmV0dXJuEg4KBlJlc3Vs",
            "dBgBIAEoDRIwCgN0YWcYAiABKAsyIy5NZXNzYWdlLlNlcnZlci5SZWdpc3Rl",
            "ci5TZXJ2ZXJfVGFnIigKDENvbm5lY3RfSW5mbxIMCgRwb3J0GAEgASgFEgoK",
            "AmlwGAIgASgJIq4BChpNU0dfU2VydmVyX0Nvbm5lY3RfQ29tbWFuZBIwCgN0",
            "YWcYASABKAsyIy5NZXNzYWdlLlNlcnZlci5SZWdpc3Rlci5TZXJ2ZXJfVGFn",
            "EjMKBGluZm8YAiABKAsyJS5NZXNzYWdlLlNlcnZlci5SZWdpc3Rlci5Db25u",
            "ZWN0X0luZm8SEwoLY29ubmVjdFR5cGUYBCABKAUSFAoMY29ubmVjdFR5cGUx",
            "GAUgASgFYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.Server.Register.Server_Tag), global::Message.Server.Register.Server_Tag.Parser, new[]{ "ServerType", "GroupId", "SubId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.Server.Register.MSG_Server_Register), global::Message.Server.Register.MSG_Server_Register.Parser, new[]{ "Tag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.Server.Register.MSG_Server_Register_Return), global::Message.Server.Register.MSG_Server_Register_Return.Parser, new[]{ "Result", "Tag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.Server.Register.Connect_Info), global::Message.Server.Register.Connect_Info.Parser, new[]{ "Port", "Ip" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.Server.Register.MSG_Server_Connect_Command), global::Message.Server.Register.MSG_Server_Connect_Command.Parser, new[]{ "Tag", "Info", "ConnectType", "ConnectType1" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Server_Tag : pb::IMessage<Server_Tag> {
    private static readonly pb::MessageParser<Server_Tag> _parser = new pb::MessageParser<Server_Tag>(() => new Server_Tag());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Server_Tag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.Server.Register.ServerRegisterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Server_Tag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Server_Tag(Server_Tag other) : this() {
      serverType_ = other.serverType_;
      groupId_ = other.groupId_;
      subId_ = other.subId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Server_Tag Clone() {
      return new Server_Tag(this);
    }

    /// <summary>Field number for the "serverType" field.</summary>
    public const int ServerTypeFieldNumber = 1;
    private int serverType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServerType {
      get { return serverType_; }
      set {
        serverType_ = value;
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private int groupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GroupId {
      get { return groupId_; }
      set {
        groupId_ = value;
      }
    }

    /// <summary>Field number for the "subId" field.</summary>
    public const int SubIdFieldNumber = 3;
    private int subId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubId {
      get { return subId_; }
      set {
        subId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Server_Tag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Server_Tag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerType != other.ServerType) return false;
      if (GroupId != other.GroupId) return false;
      if (SubId != other.SubId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerType != 0) hash ^= ServerType.GetHashCode();
      if (GroupId != 0) hash ^= GroupId.GetHashCode();
      if (SubId != 0) hash ^= SubId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServerType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ServerType);
      }
      if (GroupId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GroupId);
      }
      if (SubId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SubId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServerType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerType);
      }
      if (GroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupId);
      }
      if (SubId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Server_Tag other) {
      if (other == null) {
        return;
      }
      if (other.ServerType != 0) {
        ServerType = other.ServerType;
      }
      if (other.GroupId != 0) {
        GroupId = other.GroupId;
      }
      if (other.SubId != 0) {
        SubId = other.SubId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ServerType = input.ReadInt32();
            break;
          }
          case 16: {
            GroupId = input.ReadInt32();
            break;
          }
          case 24: {
            SubId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MSG_Server_Register : pb::IMessage<MSG_Server_Register> {
    private static readonly pb::MessageParser<MSG_Server_Register> _parser = new pb::MessageParser<MSG_Server_Register>(() => new MSG_Server_Register());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MSG_Server_Register> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.Server.Register.ServerRegisterReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSG_Server_Register() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSG_Server_Register(MSG_Server_Register other) : this() {
      tag_ = other.tag_ != null ? other.tag_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSG_Server_Register Clone() {
      return new MSG_Server_Register(this);
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 1;
    private global::Message.Server.Register.Server_Tag tag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Message.Server.Register.Server_Tag Tag {
      get { return tag_; }
      set {
        tag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MSG_Server_Register);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MSG_Server_Register other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Tag, other.Tag)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tag_ != null) hash ^= Tag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (tag_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tag_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MSG_Server_Register other) {
      if (other == null) {
        return;
      }
      if (other.tag_ != null) {
        if (tag_ == null) {
          tag_ = new global::Message.Server.Register.Server_Tag();
        }
        Tag.MergeFrom(other.Tag);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tag_ == null) {
              tag_ = new global::Message.Server.Register.Server_Tag();
            }
            input.ReadMessage(tag_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MSG_Server_Register_Return : pb::IMessage<MSG_Server_Register_Return> {
    private static readonly pb::MessageParser<MSG_Server_Register_Return> _parser = new pb::MessageParser<MSG_Server_Register_Return>(() => new MSG_Server_Register_Return());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MSG_Server_Register_Return> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.Server.Register.ServerRegisterReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSG_Server_Register_Return() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSG_Server_Register_Return(MSG_Server_Register_Return other) : this() {
      result_ = other.result_;
      tag_ = other.tag_ != null ? other.tag_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSG_Server_Register_Return Clone() {
      return new MSG_Server_Register_Return(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private uint result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 2;
    private global::Message.Server.Register.Server_Tag tag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Message.Server.Register.Server_Tag Tag {
      get { return tag_; }
      set {
        tag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MSG_Server_Register_Return);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MSG_Server_Register_Return other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(Tag, other.Tag)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (tag_ != null) hash ^= Tag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Result);
      }
      if (tag_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Result);
      }
      if (tag_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MSG_Server_Register_Return other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.tag_ != null) {
        if (tag_ == null) {
          tag_ = new global::Message.Server.Register.Server_Tag();
        }
        Tag.MergeFrom(other.Tag);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadUInt32();
            break;
          }
          case 18: {
            if (tag_ == null) {
              tag_ = new global::Message.Server.Register.Server_Tag();
            }
            input.ReadMessage(tag_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Connect_Info : pb::IMessage<Connect_Info> {
    private static readonly pb::MessageParser<Connect_Info> _parser = new pb::MessageParser<Connect_Info>(() => new Connect_Info());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Connect_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.Server.Register.ServerRegisterReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connect_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connect_Info(Connect_Info other) : this() {
      port_ = other.port_;
      ip_ = other.ip_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connect_Info Clone() {
      return new Connect_Info(this);
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 1;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 2;
    private string ip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ip {
      get { return ip_; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Connect_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Connect_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Port != other.Port) return false;
      if (Ip != other.Ip) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Port != 0) hash ^= Port.GetHashCode();
      if (Ip.Length != 0) hash ^= Ip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Port != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Port);
      }
      if (Ip.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Ip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (Ip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Connect_Info other) {
      if (other == null) {
        return;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.Ip.Length != 0) {
        Ip = other.Ip;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Port = input.ReadInt32();
            break;
          }
          case 18: {
            Ip = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MSG_Server_Connect_Command : pb::IMessage<MSG_Server_Connect_Command> {
    private static readonly pb::MessageParser<MSG_Server_Connect_Command> _parser = new pb::MessageParser<MSG_Server_Connect_Command>(() => new MSG_Server_Connect_Command());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MSG_Server_Connect_Command> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.Server.Register.ServerRegisterReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSG_Server_Connect_Command() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSG_Server_Connect_Command(MSG_Server_Connect_Command other) : this() {
      tag_ = other.tag_ != null ? other.tag_.Clone() : null;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      connectType_ = other.connectType_;
      connectType1_ = other.connectType1_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSG_Server_Connect_Command Clone() {
      return new MSG_Server_Connect_Command(this);
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 1;
    private global::Message.Server.Register.Server_Tag tag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Message.Server.Register.Server_Tag Tag {
      get { return tag_; }
      set {
        tag_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    private global::Message.Server.Register.Connect_Info info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Message.Server.Register.Connect_Info Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "connectType" field.</summary>
    public const int ConnectTypeFieldNumber = 4;
    private int connectType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConnectType {
      get { return connectType_; }
      set {
        connectType_ = value;
      }
    }

    /// <summary>Field number for the "connectType1" field.</summary>
    public const int ConnectType1FieldNumber = 5;
    private int connectType1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConnectType1 {
      get { return connectType1_; }
      set {
        connectType1_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MSG_Server_Connect_Command);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MSG_Server_Connect_Command other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Tag, other.Tag)) return false;
      if (!object.Equals(Info, other.Info)) return false;
      if (ConnectType != other.ConnectType) return false;
      if (ConnectType1 != other.ConnectType1) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tag_ != null) hash ^= Tag.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (ConnectType != 0) hash ^= ConnectType.GetHashCode();
      if (ConnectType1 != 0) hash ^= ConnectType1.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (tag_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Tag);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      if (ConnectType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ConnectType);
      }
      if (ConnectType1 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ConnectType1);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tag_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tag);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (ConnectType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConnectType);
      }
      if (ConnectType1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConnectType1);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MSG_Server_Connect_Command other) {
      if (other == null) {
        return;
      }
      if (other.tag_ != null) {
        if (tag_ == null) {
          tag_ = new global::Message.Server.Register.Server_Tag();
        }
        Tag.MergeFrom(other.Tag);
      }
      if (other.info_ != null) {
        if (info_ == null) {
          info_ = new global::Message.Server.Register.Connect_Info();
        }
        Info.MergeFrom(other.Info);
      }
      if (other.ConnectType != 0) {
        ConnectType = other.ConnectType;
      }
      if (other.ConnectType1 != 0) {
        ConnectType1 = other.ConnectType1;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tag_ == null) {
              tag_ = new global::Message.Server.Register.Server_Tag();
            }
            input.ReadMessage(tag_);
            break;
          }
          case 18: {
            if (info_ == null) {
              info_ = new global::Message.Server.Register.Connect_Info();
            }
            input.ReadMessage(info_);
            break;
          }
          case 32: {
            ConnectType = input.ReadInt32();
            break;
          }
          case 40: {
            ConnectType1 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
